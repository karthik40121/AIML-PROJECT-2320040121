# -*- coding: utf-8 -*-
"""mapcolouring.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15dpwSHJk-FMhBJRzt7iypNoQU9ZHERW6
"""

import networkx as nx
import matplotlib.pyplot as plt
from matplotlib.patches import Patch
G = nx.Graph()
regions = ['A', 'B', 'C', 'D', 'E']
G.add_nodes_from(regions)
edges = [('A', 'B'), ('A', 'C'), ('B', 'C'), ('B', 'D'), ('C', 'D'), ('C', 'E')]
G.add_edges_from(edges)
colors = ['red', 'green', 'blue', 'yellow']
def greedy_coloring(graph, colors):
    color_map = {}
    for node in graph.nodes():
        available_colors = set(colors)
        for neighbor in graph.neighbors(node):
            if neighbor in color_map:
                available_colors.discard(color_map[neighbor])
        color_map[node] = available_colors.pop()
    return color_map
color_map = greedy_coloring(G, colors)
pos = nx.spring_layout(G)
nx.draw(G, pos, node_color=[color_map[node] for node in G.nodes()], with_labels=True, node_size=1000, font_color='white')
legend_elements = [Patch(facecolor=color, label=f'{color}') for color in set(color_map.values())]
plt.legend(handles=legend_elements, title="Colors")
plt.show()